version: '2.1'
#orbs:
#  gradle: circleci/gradle@5.6.2

# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
#workflows:
#  gerrit-ci-pipeline:
jobs:
  build:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    docker:
      # specify the version you desire here
      - image: circleci/openjdk

      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      - checkout

      # Download and cache dependencies.
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-

      - run:
          name: gradle build
          command: ./gradlew clean jar
#           /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar
      - run:
          name: log
          command: |
            ls -al /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar 
            echo $ARTIFACTORY_URL
            echo $ARTIFACTORY_USER
            echo $ARTIFACTORY_PASSWORD

      - save_cache:
          paths:
            - ~/.gradle
            - /home/circleci/repo/build/libs
          key: v1-dependencies-{{ checksum "build.gradle" }}

      # run tests.
      - run: gradle test
  upload_to_jfrog_prod:
    docker:
      - image: circleci/openjdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install jFrog CLI
          command: curl -fL https://getcli.jfrog.io | sh
      - run:
          name: jar preparation
          command: ./gradlew clean jar
      - run:
          name: Push to Artifactory
          command: |
            ./jfrog config add artifactory-server --artifactory-url="$ARTIFACTORY_URL" --user="$ARTIFACTORY_USER" --password="$ARTIFACTORY_PASSWORD" --interactive=false
            ls -al /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar
            ./jfrog rt u /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar tiger-prod --build-name=tiger-prod --build-number=$CIRCLE_BUILD_NUM
            ./jfrog rt bce tiger-prod $CIRCLE_BUILD_NUM  # collects all environment variables on the agent
            ./jfrog rt bp tiger-prod $CIRCLE_BUILD_NUM  # attaches ^^ to the build in artifactory

  upload_to_jfrog_dev:
    docker:
      - image: circleci/openjdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found.
            - v1-dependencies-
      - run:
          name: Install jFrog CLI
          command: curl -fL https://getcli.jfrog.io | sh
      - run:
          name: jar preparation
          command: ./gradlew clean jar
      - run:
          name: Push to Artifactory
          command: |
            ./jfrog config add artifactory-server --artifactory-url="$ARTIFACTORY_URL" --user="$ARTIFACTORY_USER" --password="$ARTIFACTORY_PASSWORD" --interactive=false
            mv /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar "/home/circleci/repo/build/libs/circleci-jfrog-test-1.0-$CIRCLE_BUILD_NUM.jar"
            ./jfrog rt u /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar tiger-dev --build-name=tiger-dev --build-number=$CIRCLE_BUILD_NUM
            ./jfrog rt bce tiger-dev $CIRCLE_BUILD_NUM  # collects all environment variables on the agent
            ./jfrog rt bp tiger-dev $CIRCLE_BUILD_NUM  # attaches ^^ to the build in artifactory

  upload_to_jfrog_hotfix:
    docker:
      - image: circleci/openjdk
    working_directory: ~/repo
    environment:
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    steps:
      - checkout
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "build.gradle" }}
            # fallback to using the latest cache if no exact match is found
            - v1-dependencies-
      - run:
          name: Install jFrog CLI
          command: curl -fL https://getcli.jfrog.io | sh
      - run:
          name: jar preparation
          command: ./gradlew clean jar
      - run:
          name: Push to Artifactory
          command: |
            ./jfrog config add artifactory-server --artifactory-url="$ARTIFACTORY_URL" --user="$ARTIFACTORY_USER" --password="$ARTIFACTORY_PASSWORD" --interactive=false
            mv /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar "/home/circleci/repo/build/libs/circleci-jfrog-test-1.0-$CIRCLE_BUILD_NUM.jar"
            ./jfrog rt u /home/circleci/repo/build/libs/circleci-jfrog-test-1.0.jar tiger-hotfix --build-name=tiger-hotfix --build-number=$CIRCLE_BUILD_NUM
            ./jfrog rt bce tiger-hotfix $CIRCLE_BUILD_NUM  # collects all environment variables on the agent
            ./jfrog rt bp tiger-hotfix $CIRCLE_BUILD_NUM  # attaches ^^ to the build in artifactory

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - upload_to_jfrog_prod:  # 再搞个 upload_to_jfrog_2，上传到别的路径中
          requires:
            - build
          filters:
            branches:
              only:
                main
      - upload_to_jfrog_dev: # 再搞个 upload_to_jfrog_2，上传到别的路径中
          requires:
            - build
          filters:
            branches:
              only:
                dev
      - upload_to_jfrog_hotfix: # 再搞个 upload_to_jfrog_2，上传到别的路径中
            requires:
              - build
            filters:
              branches:
                only:
                  /^hotfix.*/
  build_only:
    jobs:
      - build
